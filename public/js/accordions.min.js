"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}var Accordion=function(){function e(t){_classCallCheck(this,e),this.rootEl=t,console.log(this.rootEl),this.buttonEl=this.rootEl.querySelector(".wp-block-crosswinds-blocks-accordion-title[aria-expanded]"),console.log(this.buttonEl);t=this.buttonEl.getAttribute("aria-controls");console.log(t),this.contentEl=document.getElementById(t),console.log(this.contentEl),this.open="true"===this.buttonEl.getAttribute("aria-expanded"),this.buttonEl.addEventListener("click",this.onButtonClick.bind(this))}return _createClass(e,[{key:"onButtonClick",value:function(){this.toggle(!this.open)}},{key:"toggle",value:function(t){t!==this.open&&(this.open=t,this.buttonEl.setAttribute("aria-expanded","".concat(t)),t?(this.contentEl.removeAttribute("hidden"),this.contentEl.offsetHeight):this.contentEl.setAttribute("hidden",""))}},{key:"open",value:function(){this.toggle(!0)}},{key:"close",value:function(){this.toggle(!1)}}]),e}(),accordions=document.querySelectorAll(".wp-block-crosswinds-blocks-accordions .accordion-title-container");accordions.forEach(function(t){new Accordion(t)});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY29yZGlvbnMuanMiXSwibmFtZXMiOlsiQWNjb3JkaW9uIiwiZG9tTm9kZSIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJyb290RWwiLCJjb25zb2xlIiwibG9nIiwiYnV0dG9uRWwiLCJxdWVyeVNlbGVjdG9yIiwiY29udHJvbHNJZCIsImdldEF0dHJpYnV0ZSIsImNvbnRlbnRFbCIsImdldEVsZW1lbnRCeUlkIiwiYmluZCIsInRvZ2dsZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvcGVuIiwic2V0QXR0cmlidXRlIiwiY29uY2F0IiwicmVtb3ZlQXR0cmlidXRlIiwib2Zmc2V0SGVpZ2h0IiwiYWNjb3JkaW9ucyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJhY2NvcmRpb25FbCJdLCJtYXBwaW5ncyI6IjBjQVNNQSxVLFdBQ0wsU0FBQUEsRUFBYUMsR0FBVUMsZ0JBQUFDLEtBQUFILEdBQ3RCRyxLQUFLQyxPQUFTSCxFQUNkSSxRQUFRQyxJQUFJSCxLQUFLQyxRQUNqQkQsS0FBS0ksU0FBV0osS0FBS0MsT0FBT0ksY0FBZSw4REFDM0NILFFBTElMLElBS1NHLEtBQUtJLFVBSklFLEVBQUFOLEtBQUFJLFNBQUFHLGFBQUEsaUJBT3RCTCxRQUFRQyxJQUFLRyxHQUNiTixLQVBBUSxVQUFjVixTQUFkVyxlQUFBSCxHQVFBSixRQVBBQSxJQUFBRixLQUFZUSxXQVNaUixLQVBBRSxLQUFBLFNBQVFDLEtBQUtDLFNBQUtBLGFBQWxCLGlCQVVBSixLQU5BSSxTQUFLSSxpQkFBcUJDLFFBQUFBLEtBQWdCSCxjQUExQ0ksS0FBQVYsTyxrREFTRCxXQUNDQSxLQUpBVyxRQUFBWCxLQUFjWSxRLG9CQU9mLFNBQVFDLEdBRUZBLElBTk5iLEtBQUFhLE9BV0NiLEtBQUthLEtBUE5BLEVBVUNiLEtBQUtJLFNBUEpVLGFBQUEsZ0JBT0QsR0FBQUMsT0FQQ0YsSUFIYUEsR0FZYmIsS0FBS1EsVUFBVVEsZ0JBQWlCLFVBQ2pCaEIsS0FBS1EsVUFBVVMsY0FFOUJqQixLQUFLUSxVQUFVTSxhQUFjLFNBQVUsTyxrQkFLekMsV0FDQ2QsS0FWQVcsUUFHTyxLLG1CQVVSLFdBQ0NYLEtBQUtXLFFBQVEsTyxLQUhiTyxXQUFBQyxTQUFBQyxpQkFBQSxxRUFTRkYsV0FBV0csUUFBUyxTQUFFQyxHQUNyQixJQUFJekIsVUFBV3lCIiwiZmlsZSI6ImFjY29yZGlvbnMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqICAgVGhpcyBjb250ZW50IGlzIGxpY2Vuc2VkIGFjY29yZGluZyB0byB0aGUgVzNDIFNvZnR3YXJlIExpY2Vuc2UgYXRcbiAqICAgaHR0cHM6Ly93d3cudzMub3JnL0NvbnNvcnRpdW0vTGVnYWwvMjAxNS9jb3B5cmlnaHQtc29mdHdhcmUtYW5kLWRvY3VtZW50XG4gKlxuICogICBTaW1wbGUgYWNjb3JkaW9uIHBhdHRlcm4gZXhhbXBsZVxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY2xhc3MgQWNjb3JkaW9uIHtcblx0Y29uc3RydWN0b3IoIGRvbU5vZGUgKSB7XG5cdFx0dGhpcy5yb290RWwgPSBkb21Ob2RlO1xuXHRcdGNvbnNvbGUubG9nKHRoaXMucm9vdEVsKTtcblx0XHR0aGlzLmJ1dHRvbkVsID0gdGhpcy5yb290RWwucXVlcnlTZWxlY3RvciggJy53cC1ibG9jay1jcm9zc3dpbmRzLWJsb2Nrcy1hY2NvcmRpb24tdGl0bGVbYXJpYS1leHBhbmRlZF0nICk7XG5cdFx0Y29uc29sZS5sb2coIHRoaXMuYnV0dG9uRWwgKTtcblxuXHRcdGNvbnN0IGNvbnRyb2xzSWQgPSB0aGlzLmJ1dHRvbkVsLmdldEF0dHJpYnV0ZSggJ2FyaWEtY29udHJvbHMnICk7XG5cdFx0Y29uc29sZS5sb2coIGNvbnRyb2xzSWQgKTtcblx0XHR0aGlzLmNvbnRlbnRFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBjb250cm9sc0lkICk7XG5cdFx0Y29uc29sZS5sb2coIHRoaXMuY29udGVudEVsICk7XG5cblx0XHR0aGlzLm9wZW4gPSB0aGlzLmJ1dHRvbkVsLmdldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnICkgPT09ICd0cnVlJztcblxuXHRcdC8vIGFkZCBldmVudCBsaXN0ZW5lcnNcblx0XHR0aGlzLmJ1dHRvbkVsLmFkZEV2ZW50TGlzdGVuZXIoICdjbGljaycsIHRoaXMub25CdXR0b25DbGljay5iaW5kKCB0aGlzICkgKTtcblx0fVxuXG5cdG9uQnV0dG9uQ2xpY2soKSB7XG5cdFx0dGhpcy50b2dnbGUoICEgdGhpcy5vcGVuICk7XG5cdH1cblxuXHR0b2dnbGUoIG9wZW4gKSB7XG5cdFx0Ly8gZG9uJ3QgZG8gYW55dGhpbmcgaWYgdGhlIG9wZW4gc3RhdGUgZG9lc24ndCBjaGFuZ2Vcblx0XHRpZiAoIG9wZW4gPT09IHRoaXMub3BlbiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyB1cGRhdGUgdGhlIGludGVybmFsIHN0YXRlXG5cdFx0dGhpcy5vcGVuID0gb3BlbjtcblxuXHRcdC8vIGhhbmRsZSBET00gdXBkYXRlc1xuXHRcdHRoaXMuYnV0dG9uRWwuc2V0QXR0cmlidXRlKCAnYXJpYS1leHBhbmRlZCcsIGAkeyBvcGVuIH1gICk7XG5cdFx0aWYgKCBvcGVuICkge1xuXHRcdFx0dGhpcy5jb250ZW50RWwucmVtb3ZlQXR0cmlidXRlKCAnaGlkZGVuJyApO1xuXHRcdFx0Y29uc3QgcmVmbG93ID0gdGhpcy5jb250ZW50RWwub2Zmc2V0SGVpZ2h0O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmNvbnRlbnRFbC5zZXRBdHRyaWJ1dGUoICdoaWRkZW4nLCAnJyApO1xuXHRcdH1cblx0fVxuXG5cdC8vIEFkZCBwdWJsaWMgb3BlbiBhbmQgY2xvc2UgbWV0aG9kcyBmb3IgY29udmVuaWVuY2Vcblx0b3BlbigpIHtcblx0XHR0aGlzLnRvZ2dsZSggdHJ1ZSApO1xuXHR9XG5cblx0Y2xvc2UoKSB7XG5cdFx0dGhpcy50b2dnbGUoIGZhbHNlICk7XG5cdH1cbn1cblxuLy8gaW5pdCBhY2NvcmRpb25zXG5jb25zdCBhY2NvcmRpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCggJy53cC1ibG9jay1jcm9zc3dpbmRzLWJsb2Nrcy1hY2NvcmRpb25zIC5hY2NvcmRpb24tdGl0bGUtY29udGFpbmVyJyApO1xuYWNjb3JkaW9ucy5mb3JFYWNoKCAoIGFjY29yZGlvbkVsICkgPT4ge1xuXHRuZXcgQWNjb3JkaW9uKCBhY2NvcmRpb25FbCApO1xufSApO1xuIl19